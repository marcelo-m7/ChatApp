{
    "file": "docs_controls_menubar.py",
    "description": "O código fornecido é um exemplo de aplicação usando o framework Flet, que é usado para criar aplicações web usando Python de maneira similar ao Flutter. O código cria uma interface de usuário com uma barra de menus contendo várias opções e submenus. Vamos analisar cada parte do código detalhadamente:\n\n### Importação do Módulo\n```python\nimport flet as ft\n```\nImporta o módulo Flet, que é necessário para utilizar suas classes e métodos.\n\n### Função Principal\n```python\ndef main(page: ft.Page):\n```\nDefine a função principal que recebe um objeto `page` do tipo `ft.Page`. Esta função configura a página.\n\n### Referência do Texto no AppBar\n```python\nappbar_text_ref = ft.Ref[ft.Text]()\n```\nCria uma referência para um objeto de texto que será usado no AppBar. Isso permite atualizar o texto dinamicamente.\n\n### Funções de Evento\n- **handle_menu_item_click**: Chamada quando um item de menu é clicado. Mostra uma SnackBar com uma mensagem e atualiza o texto do AppBar.\n- **handle_submenu_open**: Chamada quando um submenu é aberto.\n- **handle_submenu_close**: Chamada quando um submenu é fechado.\n- **handle_submenu_hover**: Chamada quando um submenu é passado por cima com o mouse.\n\n### Configuração do AppBar\n```python\npage.appbar = ft.AppBar(\n    title=ft.Text(\"Menus\", ref=appbar_text_ref),\n    center_title=True,\n    bgcolor=ft.Colors.BLUE,\n)\n```\nConfigura a AppBar da página com um título centralizado e cor de fundo azul.\n\n### Configuração da Barra de Menus\n```python\nmenubar = ft.MenuBar(\n    expand=True,\n    style=ft.MenuStyle(\n        alignment=ft.alignment.top_left,\n        bgcolor=ft.Colors.RED_300,\n        mouse_cursor={\n            ft.ControlState.HOVERED: ft.MouseCursor.WAIT,\n            ft.ControlState.DEFAULT: ft.MouseCursor.ZOOM_OUT,\n        },\n    ),\n    controls=[\n        # Submenus e itens aqui\n    ],\n)\n```\nDefine uma barra de menus que expande para preencher o espaço disponível, com um estilo específico que inclui alinhamento, cor de fundo e cursosres de mouse.\n\n### Itens do Menu\nDentro de `menubar`, são definidos vários `ft.SubmenuButton` e `ft.MenuItemButton`. Cada um deles pode ter eventos associados (`on_click`, `on_open`, `on_close`, `on_hover`) e estilos específicos, incluindo ícones e cores de fundo que mudam com o estado do controle (ex: hover).\n\n### Adicionando a Barra de Menus à Página\n```python\npage.add(ft.Row([menubar]))\n```\nAdiciona a barra de menus à página dentro de uma linha (`ft.Row`), que é um contêiner horizontal.\n\n### Inicialização do App\n```python\nft.app(main)\n```\nInicia a aplicação passando a função `main` como argumento.\n\n### Resumo\nEste código cria uma aplicação web com uma barra de menus interativa, onde os usuários podem clicar nos itens de menu, ver mensagens quando os itens são clicados, e observar mudanças visuais conforme interagem com a interface. Ele demonstra o uso de eventos, estilos condicionais e atualização dinâmica de componentes em Flet.",
    "examples": "Aqui estão alguns exemplos adicionais de como você pode expandir ou modificar o código fornecido para criar diferentes interações e funcionalidades em um aplicativo Flet. Cada exemplo destaca diferentes formas de uso, variando desde a adição de novas funcionalidades até a alteração do estilo visual.\n\n### Exemplo 1: Adicionando um Botão de Configurações com Ações\n\nNeste exemplo, vamos adicionar uma nova seção no menu que permite ao usuário acessar configurações e realizar algumas ações.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    appbar_text_ref = ft.Ref[ft.Text]()\n\n    def handle_menu_item_click(e):\n        page.open(ft.SnackBar(content=ft.Text(f\"{e.control.content.value} was clicked!\")))\n        appbar_text_ref.current.value = e.control.content.value\n        page.update()\n\n    page.appbar = ft.AppBar(\n        title=ft.Text(\"Menus\", ref=appbar_text_ref),\n        center_title=True,\n        bgcolor=ft.Colors.BLUE,\n    )\n\n    menubar = ft.MenuBar(\n        expand=True,\n        controls=[\n            ft.SubmenuButton(\n                content=ft.Text(\"Settings\"),\n                controls=[\n                    ft.MenuItemButton(\n                        content=ft.Text(\"Preferences\"),\n                        leading=ft.Icon(ft.Icons.SETTINGS),\n                        on_click=handle_menu_item_click,\n                    ),\n                    ft.MenuItemButton(\n                        content=ft.Text(\"Update\"),\n                        leading=ft.Icon(ft.Icons.UPGRADE),\n                        on_click=handle_menu_item_click,\n                    ),\n                ],\n            ),\n        ],\n    )\n\n    page.add(ft.Row([menubar]))\n\nft.app(main)\n```\n\n### Exemplo 2: Alterando o Estilo e Adicionando Efeitos Visuais\n\nNeste exemplo, vamos modificar o estilo visual do menu e adicionar efeitos visuais mais interativos.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    appbar_text_ref = ft.Ref[ft.Text]()\n\n    def handle_menu_item_click(e):\n        page.open(ft.SnackBar(content=ft.Text(f\"{e.control.content.value} was clicked!\")))\n        appbar_text_ref.current.value = e.control.content.value\n        page.update()\n\n    page.appbar = ft.AppBar(\n        title=ft.Text(\"Menus\", ref=appbar_text_ref),\n        center_title=True,\n        bgcolor=ft.Colors.BLUE,\n    )\n\n    menubar = ft.MenuBar(\n        expand=True,\n        style=ft.MenuStyle(\n            bgcolor=ft.Colors.GREY_900,\n            mouse_cursor={\n                ft.ControlState.HOVERED: ft.MouseCursor.POINTER\n            },\n        ),\n        controls=[\n            ft.SubmenuButton(\n                content=ft.Text(\"File\"),\n                controls=[\n                    ft.MenuItemButton(\n                        content=ft.Text(\"Open\"),\n                        leading=ft.Icon(ft.Icons.FOLDER_OPEN),\n                        style=ft.ButtonStyle(bgcolor={ft.ControlState.HOVERED: ft.Colors.ORANGE_200}),\n                        on_click=handle_menu_item_click,\n                    ),\n                ],\n            ),\n        ],\n    )\n\n    page.add(ft.Row([menubar]))\n\nft.app(main)\n```\n\n### Exemplo 3: Adicionando Funcionalidade de Ajuda e Feedback\n\nEste exemplo foca na adição de uma seção de ajuda e feedback para melhorar a interação com o usuário.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    appbar_text_ref = ft.Ref[ft.Text]()\n\n    def handle_menu_item_click(e):\n        page.open(ft.SnackBar(content=ft.Text(f\"{e.control.content.value} was clicked!\")))\n        appbar_text_ref.current.value = e.control.content.value\n        page.update()\n\n    page.appbar = ft.AppBar(\n        title=ft.Text(\"Menus\", ref=appbar_text_ref),\n        center_title=True,\n        bgcolor=ft.Colors.BLUE,\n    )\n\n    menubar = ft.MenuBar(\n        expand=True,\n        controls=[\n            ft.SubmenuButton(\n                content=ft.Text(\"Help\"),\n                controls=[\n                    ft.MenuItemButton(\n                        content=ft.Text(\"Documentation\"),\n                        leading=ft.Icon(ft.Icons.BOOK),\n                        on_click=handle_menu_item_click,\n                    ),\n                    ft.MenuItemButton(\n                        content=ft.Text(\"Submit Feedback\"),\n                        leading=ft.Icon(ft.Icons.FEEDBACK),\n                        on_click=handle_menu_item_click,\n                    ),\n                ],\n            ),\n        ],\n    )\n\n    page.add(ft.Row([menubar]))\n\nft.app(main)\n```\n\nCada um desses exemplos ilustra diferentes maneiras de expandir e personalizar a funcionalidade e a aparência do menu em um aplicativo Flet, tornando-o mais útil e visualmente atraente para os usuários."
}