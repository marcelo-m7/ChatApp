{
    "file": "docs_controls_card.py",
    "description": "O código Python apresentado utiliza a biblioteca Flet para criar uma interface de usuário simples em um aplicativo web. O código define um único cartão que contém informações sobre uma música fictícia chamada \"The Enchanted Nightingale\". Vamos descrever cada parte do código e suas funções:\n\n1. **Importação da Biblioteca Flet:**\n   ```python\n   import flet as ft\n   ```\n   Este comando importa a biblioteca Flet, que é usada para construir interfaces de usuário baseadas na web com Python.\n\n2. **Definição da função principal:**\n   ```python\n   def main(page):\n   ```\n   Define a função `main` que recebe um objeto `page`, que representa a página da web onde os elementos da UI serão adicionados.\n\n3. **Configuração do Título da Página:**\n   ```python\n   page.title = \"Card Example\"\n   ```\n   Define o título da página da web como \"Card Example\".\n\n4. **Adicionando um Cartão à Página:**\n   ```python\n   page.add(\n       ft.Card(\n           ...\n       )\n   )\n   ```\n   A função `add` do objeto `page` é usada para adicionar elementos à página. Neste caso, está sendo adicionado um objeto `Card`.\n\n5. **Conteúdo do Cartão:**\n   Dentro do `Card`, há um `Container` definido, que ajuda a organizar o layout e o estilo dos itens dentro dele. O `Container` tem um conteúdo que é uma `Column` (coluna), permitindo que os itens sejam organizados verticalmente.\n\n   - **ListTile:**\n     ```python\n     ft.ListTile(\n         leading=ft.Icon(ft.Icons.ALBUM),\n         title=ft.Text(\"The Enchanted Nightingale\"),\n         subtitle=ft.Text(\"Music by Julie Gable. Lyrics by Sidney Stein.\")\n     )\n     ```\n     Este widget é usado para adicionar uma linha de item de lista no cartão, com um ícone de um álbum à esquerda (definido com `leading=ft.Icon(ft.Icons.ALBUM)`), um título e um subtítulo.\n\n   - **Row de Botões:**\n     ```python\n     ft.Row(\n         [ft.TextButton(\"Buy tickets\"), ft.TextButton(\"Listen\")],\n         alignment=ft.MainAxisAlignment.END,\n     )\n     ```\n     Define uma linha (`Row`) que contém dois botões de texto (\"Buy tickets\" e \"Listen\"). A propriedade `alignment=ft.MainAxisAlignment.END` alinha os botões ao final da linha (à direita).\n\n6. **Propriedades do Container:**\n   O `Container` é configurado com uma largura de 400 pixels e um padding de 10 pixels, definindo assim o espaço interno ao redor do conteúdo dentro dele.\n\n7. **Execução do Aplicativo:**\n   ```python\n   ft.app(main)\n   ```\n   Esta linha de código inicia o aplicativo usando a função `main` como a função de entrada para manipular a página.\n\nEste código, quando executado, criará um aplicativo web com um cartão que exibe informações sobre uma peça musical fictícia, acompanhada de botões para ações pertinentes, como comprar ingressos ou ouvir a música. É um exemplo simples de como usar a biblioteca Flet para criar interfaces de usuário interativas e visualmente agradáveis.",
    "examples": "O código fornecido utiliza a biblioteca Flet para criar uma interface de usuário simples com um card contendo informações sobre uma música, juntamente com botões para ações. Abaixo estão alguns exemplos adicionais que exploram diferentes formas de uso do Flet para criar interfaces com variações de conteúdo, layout e interatividade.\n\n### Exemplo 1: Card com Imagem e Texto\n\nEste exemplo mostra como adicionar uma imagem ao card junto com o texto.\n\n```python\nimport flet as ft\n\ndef main(page):\n    page.title = \"Card with Image\"\n    page.add(\n        ft.Card(\n            content=ft.Container(\n                content=ft.Column(\n                    [\n                        ft.Image(src=\"https://example.com/image.jpg\", fit=ft.BoxFit.cover),\n                        ft.Text(\"Beautiful Landscape\", size=20),\n                        ft.Text(\"A stunning view of nature's beauty.\"),\n                        ft.Row(\n                            [ft.TextButton(\"View more\"), ft.TextButton(\"Share\")],\n                            alignment=ft.MainAxisAlignment.END,\n                        ),\n                    ]\n                ),\n                width=400,\n                padding=10,\n            )\n        )\n    )\n\nft.app(main)\n```\n\n### Exemplo 2: Card Interativo com Entrada de Usuário\n\nEste exemplo inclui um campo de entrada para interatividade do usuário.\n\n```python\nimport flet as ft\n\ndef main(page):\n    page.title = \"Interactive Card\"\n    page.add(\n        ft.Card(\n            content=ft.Container(\n                content=ft.Column(\n                    [\n                        ft.TextField(label=\"Your name\"),\n                        ft.TextField(label=\"Your email\", keyboard_type=ft.KeyboardType.EMAIL),\n                        ft.TextButton(\"Submit\", on_click=lambda e: submit_form(page)),\n                    ]\n                ),\n                width=400,\n                padding=10,\n            )\n        )\n    )\n\ndef submit_form(page):\n    page.update()\n\nft.app(main)\n```\n\n### Exemplo 3: Card com Lista de Itens\n\nEste exemplo mostra como usar um card para listar itens, como numa lista de compras.\n\n```python\nimport flet as ft\n\ndef main(page):\n    page.title = \"Shopping List Card\"\n    page.add(\n        ft.Card(\n            content=ft.Container(\n                content=ft.ListView(\n                    items=[\n                        ft.ListTile(title=ft.Text(\"Apples\"), leading=ft.Icon(ft.Icons.CHECK_BOX_OUTLINE_BLANK)),\n                        ft.ListTile(title=ft.Text(\"Bread\"), leading=ft.Icon(ft.Icons.CHECK_BOX_OUTLINE_BLANK)),\n                        ft.ListTile(title=ft.Text(\"Cheese\"), leading=ft.Icon(ft.Icons.CHECK_BOX_OUTLINE_BLANK)),\n                    ],\n                    spacing=10,\n                ),\n                width=400,\n                padding=10,\n            )\n        )\n    )\n\nft.app(main)\n```\n\nCada um destes exemplos mostra uma maneira diferente de utilizar os componentes do Flet para criar cards com diferentes tipos de conteúdo e funcionalidades, oferecendo aos usuários uma variedade de interfaces interativas e informativas."
}