{
    "file": "docs_controls_lottie.py",
    "description": "O código apresentado é um exemplo simples de como usar a biblioteca Flet em Python para criar uma aplicação web que exibe uma animação Lottie. Abaixo, descrevo cada parte do código e suas funções e propriedades:\n\n1. `import flet as ft`:\n   - Essa linha importa a biblioteca Flet e atribui a ela o alias `ft`. A biblioteca Flet permite criar aplicações web usando Python de forma simples e eficiente.\n\n2. `def main(page: ft.Page):`\n   - Esta é a definição de uma função chamada `main`, que recebe um parâmetro `page` do tipo `ft.Page`. `ft.Page` é um objeto que representa a página da aplicação web.\n\n3. `page.add(...)`\n   - Este método é usado para adicionar componentes à página. No caso, está adicionando um componente `ft.Lottie`.\n\n4. `ft.Lottie(...)`\n   - `ft.Lottie` é um componente da Flet que permite exibir animações Lottie. Lottie é um formato de animação popular que utiliza animações baseadas em JSON para renderizar gráficos vetoriais animados de forma leve e eficiente.\n   - Parâmetros de `ft.Lottie`:\n     - `src`:  Este parâmetro define a URL de onde o arquivo JSON da animação Lottie será carregado. No exemplo, a animação é carregada de um repositório no GitHub.\n     - `reverse`: Este é um booleano que, se definido como `True`, faria a animação rodar em reverso. No exemplo, está definido como `False`, então a animação será reproduzida na ordem normal.\n     - `animate`: Outro booleano, que, quando `True`, faz com que a animação comece a ser reproduzida automaticamente assim que carregada. No exemplo, está definido como `True`.\n\n5. `ft.app(main)`\n   - Esta linha inicia a aplicação chamando a função `main`. A função `ft.app` é usada para configurar e iniciar a aplicação Flet, definindo `main` como a função de entrada que configura a página inicial.\n\nResumindo, este código cria uma aplicação web simples usando Flet, que exibe uma animação Lottie baixada de um URL específico, reproduzindo-a automaticamente em sua ordem normal.",
    "examples": "Claro! O código que você forneceu é um exemplo básico de como adicionar uma animação Lottie em uma página usando a biblioteca Flet em Python. Abaixo, vou oferecer diferentes variações e usos da animação Lottie em um aplicativo Flet para ilustrar funcionalidades adicionais.\n\n### Exemplo 1: Alterando a velocidade da animação\nEste exemplo demonstra como mudar a velocidade de animação usando o atributo `speed`, que pode ser ajustado para reproduzir a animação mais rápido ou mais devagar.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Lottie(\n            src='https://raw.githubusercontent.com/xvrh/lottie-flutter/master/example/assets/Mobilo/A.json',\n            animate=True,\n            speed=2.0  # Duplica a velocidade da animação\n        )\n    )\n\nft.app(main)\n```\n\n### Exemplo 2: Repetindo a animação\nEste exemplo mostra como fazer a animação repetir várias vezes ou infinitamente.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Lottie(\n            src='https://raw.githubusercontent.com/xvrh/lottie-flutter/master/example/assets/Mobilo/A.json',\n            animate=True,\n            repeat=True  # Repete a animação infinitamente\n        )\n    )\n\nft.app(main)\n```\n\n### Exemplo 3: Controlando a animação com botões\nEste exemplo adiciona botões para controlar a animação, permitindo ao usuário iniciar e parar a animação.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    lottie_animation = ft.Lottie(\n        src='https://raw.githubusercontent.com/xvrh/lottie-flutter/master/example/assets/Mobilo/A.json',\n        width=300,\n        height=300,\n        animate=False  # Inicia sem animar\n    )\n\n    def start_animation(e):\n        lottie_animation.animate = True\n        lottie_animation.update()\n\n    def stop_animation(e):\n        lottie_animation.animate = False\n        lottie_animation.update()\n\n    start_button = ft.Button(text=\"Iniciar\", on_click=start_animation)\n    stop_button = ft.Button(text=\"Parar\", on_click=stop_animation)\n\n    page.add(lottie_animation, start_button, stop_button)\n\nft.app(main)\n```\n\n### Exemplo 4: Usando uma animação Lottie local\nEste exemplo carrega uma animação Lottie de um arquivo local em vez de um URL.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Lottie(\n            src='file:///path/to/your/animation.json',\n            animate=True\n        )\n    )\n\nft.app(main)\n```\n\n### Exemplo 5: Revertendo a animação\nEste exemplo mostra como reproduzir a animação de trás para frente.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Lottie(\n            src='https://raw.githubusercontent.com/xvrh/lottie-flutter/master/example/assets/Mobilo/A.json',\n            animate=True,\n            reverse=True  # Reproduz a animação de trás para frente\n        )\n    )\n\nft.app(main)\n```\n\nEstes exemplos ilustram diferentes maneiras de manipular e controlar animações Lottie em uma aplicação Flet, permitindo uma interação mais rica e personalizada com o usuário."
}