{
    "file": "docs_controls_gridview.py",
    "description": "O código fornecido é um exemplo de como criar uma aplicação utilizando a biblioteca Flet em Python, que permite criar aplicações GUI que podem ser executadas em um navegador web. O exemplo específico demonstra como configurar uma página com um grid de imagens. Vamos detalhar cada parte do código:\n\n1. **Importação da biblioteca Flet**:\n   ```python\n   import flet as ft\n   ```\n   Esta linha importa a biblioteca Flet, que é usada para construir a interface do usuário.\n\n2. **Definição da função `main`**:\n   ```python\n   def main(page: ft.Page):\n   ```\n   A função `main` é definida com um parâmetro `page`, que é do tipo `ft.Page`. Essa função será usada para configurar a página da aplicação.\n\n3. **Configurações da página**:\n   ```python\n   page.title = \"GridView Example\"\n   page.theme_mode = ft.ThemeMode.DARK\n   page.padding = 50\n   page.update()\n   ```\n   - `page.title`: Define o título da página como \"GridView Example\".\n   - `page.theme_mode`: Configura o tema da página para o modo escuro (`DARK`).\n   - `page.padding`: Adiciona um padding de 50 pixels em todos os lados da página.\n   - `page.update()`: Atualiza a página para refletir as configurações aplicadas.\n\n4. **Criação de um GridView para armazenar imagens**:\n   ```python\n   images = ft.GridView(\n       expand=1,\n       runs_count=5,\n       max_extent=150,\n       child_aspect_ratio=1.0,\n       spacing=5,\n       run_spacing=5,\n   )\n   page.add(images)\n   ```\n   - `GridView` é usado para criar um layout de grade para os controles, neste caso, imagens.\n   - `expand=1`: Permite que o GridView se expanda para preencher o espaço disponível.\n   - `runs_count=5`: Define o número de colunas na grade.\n   - `max_extent=150`: Define a largura máxima de cada item na grade.\n   - `child_aspect_ratio=1.0`: Mantém a proporção de aspecto dos filhos como 1:1 (quadrado).\n   - `spacing=5`: Define o espaçamento entre itens na mesma linha.\n   - `run_spacing=5`: Define o espaçamento entre linhas.\n   - `page.add(images)`: Adiciona o GridView à página.\n\n5. **Adicionando imagens ao GridView**:\n   ```python\n   for i in range(0, 60):\n       images.controls.append(\n           ft.Image(\n               src=f\"https://picsum.photos/150/150?{i}\",\n               fit=ft.ImageFit.NONE,\n               repeat=ft.ImageRepeat.NO_REPEAT,\n               border_radius=ft.border_radius.all(10),\n           )\n       )\n   ```\n   - Este loop adiciona 60 imagens ao GridView.\n   - `ft.Image`: Cria um widget de imagem.\n   - `src`: Define a URL da imagem. Aqui, ele usa imagens aleatórias do serviço Picsum.\n   - `fit=ft.ImageFit.NONE`: A imagem não é redimensionada para se ajustar ao espaço disponível.\n   - `repeat=ft.ImageRepeat.NO_REPEAT`: A imagem não se repete.\n   - `border_radius=ft.border_radius.all(10)`: Define um raio de borda de 10 para todas as bordas da imagem.\n\n6. **Atualização final da página**:\n   ```python\n   page.update()\n   ```\n   Atualiza a página novamente após adicionar todas as imagens ao GridView.\n\n7. **Executando a aplicação**:\n   ```python\n   ft.app(main, view=ft.AppView.WEB_BROWSER)\n   ```\n   Esta linha inicializa a aplicação usando a função `main` e define que a aplicação deve ser visualizada em um navegador web.\n\nEsse código exemplifica como usar a biblioteca Flet para criar uma aplicação web com um layout visual organizado e interativo, mostrando um uso prático de criação de interface gráfica em Python.",
    "examples": "O código fornecido cria uma página usando a biblioteca Flet em Python, que apresenta uma grade de imagens obtidas a partir do serviço Picsum. Vamos explorar algumas variações deste código para demonstrar diferentes funcionalidades e usos do `GridView` e outros componentes do Flet.\n\n### Exemplo 1: Alteração do Layout e da Aparência das Imagens\nNo exemplo a seguir, vamos alterar o número de colunas, o tamanho máximo das células e a aparência das imagens (como o modo de ajuste da imagem e a borda).\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"GridView Modified Layout\"\n    page.theme_mode = ft.ThemeMode.DARK\n    page.padding = 20\n    page.update()\n\n    images = ft.GridView(\n        expand=1,\n        runs_count=3,  # Número reduzido de colunas\n        max_extent=200,  # Células maiores\n        child_aspect_ratio=1.5,  # Novo aspecto das células\n        spacing=10,\n        run_spacing=10,\n    )\n    page.add(images)\n\n    for i in range(0, 30):\n        images.controls.append(\n            ft.Image(\n                src=f\"https://picsum.photos/200/300?{i}\",\n                fit=ft.ImageFit.COVER,  # Modo de ajuste alterado\n                border_radius=ft.border_radius.all(15),\n                border=ft.border.all(2, \"red\")  # Adiciona borda vermelha\n            )\n        )\n\n    page.update()\n\nft.app(main, view=ft.AppView.WEB_BROWSER)\n```\n\n### Exemplo 2: Interação com as Imagens\nAqui, adicionamos um evento de clique em cada imagem, que exibirá um alerta com o índice da imagem clicada.\n\n```python\nimport flet as ft\n\ndef image_clicked(e, image_index):\n    e.page.alert(f\"You clicked on image {image_index}\")\n\ndef main(page: ft.Page):\n    page.title = \"Interactive GridView\"\n    page.theme_mode = ft.ThemeMode.LIGHT\n    page.padding = 30\n    page.update()\n\n    images = ft.GridView(\n        expand=1,\n        runs_count=4,\n        max_extent=150,\n        child_aspect_ratio=1.0,\n        spacing=8,\n        run_spacing=8,\n    )\n    page.add(images)\n\n    for i in range(0, 40):\n        img = ft.Image(\n            src=f\"https://picsum.photos/150?{i}\",\n            fit=ft.ImageFit.COVER,\n            border_radius=ft.border_radius.all(5),\n        )\n        # Adicionando evento de clique\n        img.on_click = lambda e, img_index=i: image_clicked(e, img_index)\n        images.controls.append(img)\n\n    page.update()\n\nft.app(main, view=ft.AppView.WEB_BROWSER)\n```\n\n### Exemplo 3: Adicionando Títulos às Imagens\nNeste exemplo, cada imagem na grade terá um título abaixo dela, usando `Column` para organizar a imagem e o texto.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"GridView with Titles\"\n    page.theme_mode = ft.ThemeMode.DARK\n    page.update()\n\n    images = ft.GridView(\n        expand=1,\n        runs_count=4,\n        max_extent=120,\n        child_aspect_ratio=1.0,\n        spacing=10,\n        run_spacing=10,\n    )\n    page.add(images)\n\n    for i in range(0, 40):\n        col = ft.Column([\n            ft.Image(\n                src=f\"https://picsum.photos/120?{i}\",\n                fit=ft.ImageFit.COVER,\n                border_radius=ft.border_radius.all(5),\n            ),\n            ft.Text(f\"Image {i+1}\")\n        ])\n        images.controls.append(col)\n\n    page.update()\n\nft.app(main, view=ft.AppView.WEB_BROWSER)\n```\n\nEstes exemplos ilustram diferentes maneiras de usar o `GridView` no Flet para criar interfaces dinâmicas e interativas com imagens."
}