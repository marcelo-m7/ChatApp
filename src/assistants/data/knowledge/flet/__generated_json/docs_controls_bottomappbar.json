{
    "file": "docs_controls_bottomappbar.py",
    "description": "O código Python apresentado utiliza a biblioteca Flet, que é projetada para criar aplicativos de interface de usuário (UI) com Python de maneira simples e eficiente. O script define um layout de aplicativo com uma barra de aplicativos superior (appbar), uma barra de aplicativos inferior (bottom_appbar) e um botão de ação flutuante (floating action button ou FAB), além de outros elementos de interface. Vamos analisar cada parte do código:\n\n1. **Importação da biblioteca Flet**:\n   ```python\n   import flet as ft\n   ```\n   Esta linha importa a biblioteca Flet, que é renomeada como `ft` para simplificar as chamadas subsequentes de funções e classes da biblioteca.\n\n2. **Definição da função principal**:\n   ```python\n   def main(page: ft.Page):\n   ```\n   A função `main` é definida com um parâmetro `page`, que é uma instância de `ft.Page`. Esta função será usada para configurar a página do aplicativo.\n\n3. **Configurações de alinhamento da página**:\n   ```python\n   page.horizontal_alignment = page.vertical_alignment = \"center\"\n   ```\n   Define o alinhamento horizontal e vertical do conteúdo da página como centralizado.\n\n4. **Botão de ação flutuante (Floating Action Button - FAB)**:\n   ```python\n   page.floating_action_button = ft.FloatingActionButton(icon=ft.Icons.ADD)\n   page.floating_action_button_location = ft.FloatingActionButtonLocation.CENTER_DOCKED\n   ```\n   Um FAB com ícone de adição (`ft.Icons.ADD`) é criado e posicionado no centro da parte inferior da página (`CENTER_DOCKED`).\n\n5. **Barra de aplicativos superior (AppBar)**:\n   ```python\n   page.appbar = ft.AppBar(\n       title=ft.Text(\"Bottom AppBar Demo\"),\n       center_title=True,\n       bgcolor=ft.Colors.GREEN_300,\n       automatically_imply_leading=False,\n   )\n   ```\n   Configura a barra de aplicativos superior com um título centralizado, cor de fundo verde clara (`ft.Colors.GREEN_300`) e sem um botão de navegação automático (ícone de menu à esquerda).\n\n6. **Barra de aplicativos inferior (BottomAppBar)**:\n   ```python\n   page.bottom_appbar = ft.BottomAppBar(\n       bgcolor=ft.Colors.BLUE,\n       shape=ft.NotchShape.CIRCULAR,\n       content=ft.Row(\n           controls=[\n               ft.IconButton(icon=ft.Icons.MENU, icon_color=ft.Colors.WHITE),\n               ft.Container(expand=True),\n               ft.IconButton(icon=ft.Icons.SEARCH, icon_color=ft.Colors.WHITE),\n               ft.IconButton(icon=ft.Icons.FAVORITE, icon_color=ft.Colors.WHITE),\n           ]\n       ),\n   )\n   ```\n   Define uma barra de aplicativos na parte inferior com fundo azul e um recorte circular para o FAB. Inclui botões de ícone para menu, pesquisa e favoritos, com ícones coloridos em branco.\n\n7. **Adicionando texto ao corpo da página**:\n   ```python\n   page.add(ft.Text(\"Body!\"))\n   ```\n   Adiciona um texto simples \"Body!\" ao corpo da página.\n\n8. **Iniciando o aplicativo**:\n   ```python\n   ft.app(main)\n   ```\n   Esta linha inicia o aplicativo chamando a função `main`.\n\nEm resumo, este código cria uma interface de usuário com barras de aplicativos superior e inferior personalizadas, um botão de ação flutuante e texto no corpo, usando a biblioteca Flet para gerenciamento de layout e elementos de UI.",
    "examples": "O código fornecido configura uma aplicação Flet com uma barra de aplicativos na parte inferior, um botão de ação flutuante e uma AppBar no topo da página. Vou criar alguns exemplos adicionais para demonstrar diferentes formas de uso da biblioteca Flet, alterando componentes, estilos e comportamentos.\n\n### Exemplo 1: AppBar com Menu Dropdown e Troca de Tema\n\nNeste exemplo, adicionaremos um menu dropdown na AppBar para selecionar entre temas claros e escuros.\n\n```python\nimport flet as ft\n\ndef change_theme(page: ft.Page, theme: str):\n    if theme == \"dark\":\n        page.theme_mode = ft.ThemeMode.DARK\n    else:\n        page.theme_mode = ft.ThemeMode.LIGHT\n    page.update()\n\ndef main(page: ft.Page):\n    page.horizontal_alignment = page.vertical_alignment = \"center\"\n    \n    def theme_menu_item_click(e):\n        change_theme(page, e.control.data)\n\n    theme_menu = ft.DropdownButton(\n        text=\"Change Theme\",\n        menu_items=[\n            ft.MenuItem(text=\"Light Theme\", data=\"light\", on_click=theme_menu_item_click),\n            ft.MenuItem(text=\"Dark Theme\", data=\"dark\", on_click=theme_menu_item_click),\n        ],\n        icon=ft.Icons.THEME\n    )\n\n    page.appbar = ft.AppBar(\n        title=ft.Text(\"Theme Selector\"),\n        center_title=True,\n        actions=[theme_menu]\n    )\n    \n    page.add(ft.Text(\"Choose your theme from the AppBar!\"))\n\nft.app(main)\n```\n\n### Exemplo 2: Integração com TextField e Botão de Envio\n\nEste exemplo mostra como usar um `TextField` juntamente com um botão para enviar informações.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.horizontal_alignment = page.vertical_alignment = \"center\"\n\n    input_field = ft.TextField(hint_text=\"Enter something...\", width=200)\n    submit_button = ft.ElevatedButton(text=\"Submit\", on_click=lambda e: page.add(ft.Text(input_field.value)))\n    \n    page.add(input_field)\n    page.add(submit_button)\n\nft.app(main)\n```\n\n### Exemplo 3: Uso de Tabs para Navegação\n\nEste exemplo ilustra como criar uma interface com abas para navegar entre diferentes conteúdos.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.horizontal_alignment = page.vertical_alignment = \"center\"\n\n    def tab_change(e):\n        page.controls.clear()\n        if e.control.active_tab == 0:\n            page.add(ft.Text(\"Home tab selected!\"))\n        elif e.control.active_tab == 1:\n            page.add(ft.Text(\"Profile tab selected!\"))\n        elif e.control.active_tab == 2:\n            page.add(ft.Text(\"Settings tab selected!\"))\n        page.update()\n\n    tabs = ft.Tabs(\n        tabs=[\n            ft.Tab(text=\"Home\"),\n            ft.Tab(text=\"Profile\"),\n            ft.Tab(text=\"Settings\"),\n        ],\n        on_change=tab_change\n    )\n    page.add(tabs)\n\nft.app(main)\n```\n\nCada um desses exemplos ilustra diferentes maneiras de usar componentes Flet para criar interfaces interativas e dinâmicas em aplicações Python. Isso mostra a flexibilidade e a variedade de componentes disponíveis na biblioteca Flet."
}