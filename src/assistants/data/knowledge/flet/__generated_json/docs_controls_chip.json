{
    "file": "docs_controls_chip.py",
    "description": "Os códigos fornecidos são exemplos de como utilizar a biblioteca Flet em Python para criar interfaces de usuário web. Vamos analisar cada parte dos códigos separadamente para entender suas funções e propriedades.\n\n### Primeiro Código\n\nEste código cria uma página web com dois botões interativos (chips) usando o Flet.\n\n**Funções e Componentes:**\n1. **save_to_favorites_clicked:** Esta função é um manipulador de eventos que é chamado quando o chip \"Save to favourites\" é clicado. Ela atualiza o label do chip para \"Saved to favorites\", troca o ícone para um ícone de favorito preenchido (`FAVORITE_OUTLINED`), desabilita o chip para evitar cliques adicionais e solicita uma atualização da página.\n\n2. **open_google_maps:** Esta função também é um manipulador de eventos ativado ao clicar no chip \"9 min walk\". Ela abre a URL do Google Maps em uma nova aba ou janela do navegador.\n\n3. **Chip 'save_to_favourites':** Este componente é um chip que inicialmente mostra \"Save to favourites\" com um ícone de favorito não preenchido (`FAVORITE_BORDER_OUTLINED`). Ele tem uma cor de fundo verde e, quando desabilitado, sua cor muda para um tom de verde mais claro. O evento de clique é vinculado à função `save_to_favorites_clicked`.\n\n4. **Chip 'open_in_maps':** Este chip mostra a duração \"9 min walk\" e utiliza um ícone de mapa (`MAP_SHARP`). Ele também possui uma cor de fundo verde e abre o Google Maps ao ser clicado.\n\n5. **Adicionando os chips à página:** Os chips são adicionados numa linha horizontal (`ft.Row`) para uma apresentação lado a lado na página.\n\n### Segundo Código\n\nEste código cria uma lista de seleção de comodidades em uma página web.\n\n**Funções e Componentes:**\n1. **amenity_selected:** Esta função é um manipulador de eventos chamado quando uma das opções de comodidades é selecionada. Atualmente, ela apenas solicita uma atualização da página sem alterar nenhuma propriedade ou estado.\n\n2. **title:** Uma linha (`ft.Row`) contendo um ícone de classe de hotel (`HOTEL_CLASS`) e um texto \"Amenities\", funcionando como um cabeçalho para a seção de comodidades.\n\n3. **amenity_chips:** Uma lista de chips que representa diferentes comodidades como \"Washer / Dryer\", \"Ramp access\", etc. Cada chip tem uma cor de fundo verde e muda para um tom mais claro de verde quando desabilitado. Todos têm a função `amenity_selected` vinculada ao evento de seleção.\n\n4. **Adicionando elementos à página:** O título e a linha de chips são adicionados à página para apresentar as opções de comodidades ao usuário.\n\nEm resumo, os códigos utilizam a biblioteca Flet para criar interfaces interativas na web com chips que reagem a cliques e eventos, proporcionando uma maneira direta e visual de interação com o usuário.",
    "examples": "Vamos explorar diferentes exemplos de uso para os códigos apresentados, mostrando diversas formas de interação e visualização usando o framework Flet em Python.\n\n### Exemplo 1: Adicionando Feedback Visual e Textual\nEste exemplo expande a interação do usuário mostrando uma mensagem de confirmação ao salvar em favoritos, além de alterar a cor do chip ao ser clicado.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    def save_to_favorites_clicked(e):\n        e.control.label.value = \"Saved!\"\n        e.control.leading = ft.Icon(ft.Icons.FAVORITE)\n        e.control.bgcolor = ft.Colors.RED_200\n        e.control.disabled = True\n        page.update()\n\n    save_to_favourites = ft.Chip(\n        label=ft.Text(\"Save to favourites\"),\n        leading=ft.Icon(ft.Icons.FAVORITE_BORDER_OUTLINED),\n        bgcolor=ft.Colors.GREEN_200,\n        disabled_color=ft.Colors.GREEN_100,\n        autofocus=True,\n        on_click=save_to_favorites_clicked,\n    )\n\n    page.add(save_to_favourites)\n\nft.app(main)\n```\n\n### Exemplo 2: Uso de Callbacks para Abertura de Links Externos\nEste exemplo mostra como expandir a funcionalidade para abrir múltiplos links externos a partir de diferentes chips, permitindo uma navegação mais rica.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    def open_link(e, url):\n        page.launch_url(url)\n        page.update()\n\n    destinations = {\n        \"Google Maps\": \"https://maps.google.com\",\n        \"Weather\": \"https://weather.com\",\n        \"News\": \"https://news.google.com\"\n    }\n\n    chips = []\n    for label, url in destinations.items():\n        chips.append(ft.Chip(\n            label=ft.Text(label),\n            leading=ft.Icon(ft.Icons.LINK),\n            bgcolor=ft.Colors.BLUE_200,\n            on_click=lambda e, url=url: open_link(e, url)\n        ))\n\n    page.add(ft.Row(chips))\n\nft.app(main)\n```\n\n### Exemplo 3: Personalização Visual dos Chips de Amenidades\nEste exemplo adiciona ícones específicos para cada amenidade, melhorando a visualização e a interação.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    amenities = {\n        \"Washer / Dryer\": ft.Icons.LOCAL_LAUNDRY_SERVICE,\n        \"Ramp access\": ft.Icons.ACCESSIBILITY,\n        \"Dogs OK\": ft.Icons.PETS,\n        \"Cats OK\": ft.Icons.PETS,\n        \"Smoke-free\": ft.Icons.SMOKE_FREE\n    }\n\n    amenity_chips = []\n    for amenity, icon in amenities.items():\n        amenity_chips.append(\n            ft.Chip(\n                label=ft.Text(amenity),\n                leading=ft.Icon(icon),\n                bgcolor=ft.Colors.GREEN_200,\n                disabled_color=ft.Colors.GREEN_100,\n                autofocus=True\n            )\n        )\n\n    page.add(ft.Row([ft.Icon(ft.Icons.HOTEL_CLASS), ft.Text(\"Amenities\")]), ft.Row(amenity_chips))\n\nft.app(main)\n```\n\nCada um desses exemplos mostra como o Flet pode ser utilizado para criar interfaces interativas e visualmente atraentes, permitindo uma vasta gama de personalizações e funções úteis para diferentes aplicações web."
}