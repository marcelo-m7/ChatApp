{
    "file": "docs_controls_datepicker.py",
    "description": "O código Python apresentado utiliza a biblioteca Flet, que é uma ferramenta para criar aplicativos web interativos com Python, e a biblioteca datetime para manipulação de datas. O script define um aplicativo web simples com um botão que, ao ser clicado, abre um seletor de datas (DatePicker). Vamos detalhar cada parte do código e suas funções:\n\n1. **Importação das Bibliotecas:**\n   ```python\n   import datetime\n   import flet as ft\n   ```\n   - `datetime`: importada para manipulação de datas e horários em Python.\n   - `flet`: importada para criar interfaces de usuário interativas em aplicativos web.\n\n2. **Definição da Função Principal:**\n   ```python\n   def main(page: ft.Page):\n   ```\n   Esta função é chamada quando o aplicativo é iniciado. Ela recebe um objeto `page`, que representa a página do aplicativo web.\n\n3. **Configuração da Página:**\n   ```python\n   page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n   ```\n   Define o alinhamento horizontal dos elementos na página para o centro.\n\n4. **Definição das Funções de Callback:**\n   - `handle_change(e)`: Esta função é chamada quando uma data é selecionada no DatePicker. Ela adiciona um texto à página informando a data selecionada.\n     ```python\n     def handle_change(e):\n         page.add(ft.Text(f\"Date changed: {e.control.value.strftime('%Y-%m-%d')}\"))\n     ```\n   - `handle_dismissal(e)`: Esta função é chamada quando o DatePicker é fechado sem uma seleção de data. Ela adiciona um texto à página indicando que o DatePicker foi dispensado.\n     ```python\n     def handle_dismissal(e):\n         page.add(ft.Text(\"DatePicker dismissed\"))\n     ```\n\n5. **Adição de um Botão à Página:**\n   ```python\n   page.add(\n       ft.ElevatedButton(\n           \"Pick date\",\n           icon=ft.Icons.CALENDAR_MONTH,\n           on_click=lambda e: page.open(\n               ft.DatePicker(\n                   first_date=datetime.datetime(year=2023, month=10, day=1),\n                   last_date=datetime.datetime(year=2024, month=10, day=1),\n                   on_change=handle_change,\n                   on_dismiss=handle_dismissal,\n               )\n           ),\n       )\n   )\n   ```\n   - `ft.ElevatedButton`: Adiciona um botão elevado (com sombra) à página.\n   - `\"Pick date\"`: Texto exibido no botão.\n   - `icon=ft.Icons.CALENDAR_MONTH`: Define um ícone de calendário para o botão.\n   - `on_click`: Define o que acontece quando o botão é clicado. Aqui, ele abre o `DatePicker`.\n   - `ft.DatePicker`: Controla para seleção de datas. `first_date` e `last_date` definem o intervalo de datas disponíveis para seleção.\n\n6. **Início do Aplicativo:**\n   ```python\n   ft.app(main)\n   ```\n   Chama a função `ft.app` passando `main` como argumento para iniciar o aplicativo.\n\nEste script cria um interface simples com um botão que, ao ser clicado, permite ao usuário escolher uma data dentro de um intervalo específico. Ações adicionais são definidas para registrar e exibir a seleção ou o cancelamento da escolha.",
    "examples": "No código fornecido, um botão é criado usando o Flet, que, quando clicado, abre um seletor de datas (`DatePicker`). O `DatePicker` permite ao usuário escolher uma data entre 1 de outubro de 2023 e 1 de outubro de 2024. Quando uma data é selecionada, ela é exibida na página, e quando o `DatePicker` é dispensado, uma mensagem é exibida na página também.\n\nAqui estão alguns exemplos adicionais que exploram diferentes aspectos do Flet e do `DatePicker`:\n\n### Exemplo 1: Adicionar uma Etiqueta Inicial\nAdicionar uma etiqueta que exiba uma mensagem inicial para o usuário, guiando-o a clicar no botão para selecionar uma data.\n\n```python\nimport datetime\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    # Mensagem inicial\n    page.add(ft.Text(\"Clique no botão abaixo para escolher uma data:\"))\n\n    def handle_change(e):\n        page.add(ft.Text(f\"Date changed: {e.control.value.strftime('%Y-%m-%d')}\"))\n\n    def handle_dismissal(e):\n        page.add(ft.Text(\"DatePicker dismissed\"))\n\n    page.add(\n        ft.ElevatedButton(\n            \"Pick date\",\n            icon=ft.Icons.CALENDAR_MONTH,\n            on_click=lambda e: page.open(\n                ft.DatePicker(\n                    first_date=datetime.datetime(year=2023, month=10, day=1),\n                    last_date=datetime.datetime(year=2024, month=10, day=1),\n                    on_change=handle_change,\n                    on_dismiss=handle_dismissal,\n                )\n            ),\n        )\n    )\n\nft.app(main)\n```\n\n### Exemplo 2: Definindo uma Data Inicial\nDefinir uma data inicial no `DatePicker` para que o usuário tenha uma referência de data quando abrir o seletor.\n\n```python\nimport datetime\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    def handle_change(e):\n        page.add(ft.Text(f\"Date changed: {e.control.value.strftime('%Y-%m-%d')}\"))\n\n    def handle_dismissal(e):\n        page.add(ft.Text(\"DatePicker dismissed\"))\n\n    page.add(\n        ft.ElevatedButton(\n            \"Pick date\",\n            icon=ft.Icons.CALENDAR_MONTH,\n            on_click=lambda e: page.open(\n                ft.DatePicker(\n                    initial_date=datetime.datetime(year=2023, month=11, day=15),  # Data inicial\n                    first_date=datetime.datetime(year=2023, month=10, day=1),\n                    last_date=datetime.datetime(year=2024, month=10, day=1),\n                    on_change=handle_change,\n                    on_dismiss=handle_dismissal,\n                )\n            ),\n        )\n    )\n\nft.app(main)\n```\n\n### Exemplo 3: Alterar o Layout da Página\nModificar o layout da página para ter um alinhamento vertical e adicionar um cabeçalho.\n\n```python\nimport datetime\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.SPACE_AROUND\n    page.add(ft.Text(\"Escolha uma Data\", style=ft.TextStyle(size=25)))\n\n    def handle_change(e):\n        page.add(ft.Text(f\"Data selecionada: {e.control.value.strftime('%Y-%m-%d')}\"))\n\n    def handle_dismissal(e):\n        page.add(ft.Text(\"Seleção de data cancelada\"))\n\n    page.add(\n        ft.ElevatedButton(\n            \"Selecionar data\",\n            icon=ft.Icons.CALENDAR_MONTH,\n            on_click=lambda e: page.open(\n                ft.DatePicker(\n                    first_date=datetime.datetime(year=2023, month=10, day=1),\n                    last_date=datetime.datetime(year=2024, month=10, day=1),\n                    on_change=handle_change,\n                    on_dismiss=handle_dismissal,\n                )\n            ),\n        )\n    )\n\nft.app(main)\n```\n\nCada um desses exemplos demonstra diferentes maneiras de personalizar e utilizar o `DatePicker` no Flet, tornando a interface mais interativa e informativa para o usuário."
}