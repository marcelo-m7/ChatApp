{
    "file": "docs_controls_animatedswitcher.py",
    "description": "O código apresentado utiliza a biblioteca Flet para criar uma interface gráfica simples com Python, que consiste em dois contêineres de texto que alternam entre si quando um botão é clicado. A seguir, vamos detalhar cada parte do código para entender melhor suas funções e propriedades:\n\n### Importação da Biblioteca\n```python\nimport flet as ft\n```\n- Importa a biblioteca Flet, que é usada para criar interfaces gráficas.\n\n### Definição da Função Principal\n```python\ndef main(page: ft.Page):\n```\n- Define a função `main`, que é o ponto de entrada do aplicativo. A função recebe um objeto `page`, que representa a página da aplicação.\n\n### Criação dos Contêineres\n```python\nc1 = ft.Container(\n    ft.Text(\"Hello!\", style=ft.TextThemeStyle.HEADLINE_MEDIUM),\n    alignment=ft.alignment.center,\n    width=200,\n    height=200,\n    bgcolor=ft.Colors.GREEN,\n)\nc2 = ft.Container(\n    ft.Text(\"Bye!\", size=50),\n    alignment=ft.alignment.center,\n    width=200,\n    height=200,\n    bgcolor=ft.Colors.YELLOW,\n)\n```\n- `c1` e `c2` são contêineres que contêm textos (\"Hello!\" e \"Bye!\") respectivamente.\n- `ft.TextThemeStyle.HEADLINE_MEDIUM` aplica um estilo predefinido ao texto do primeiro contêiner.\n- `alignment=ft.alignment.center` centraliza o conteúdo dentro dos contêineres.\n- `width` e `height` definem as dimensões dos contêineres.\n- `bgcolor` define a cor de fundo dos contêineres.\n\n### Criação do AnimatedSwitcher\n```python\nc = ft.AnimatedSwitcher(\n    c1,\n    transition=ft.AnimatedSwitcherTransition.SCALE,\n    duration=500,\n    reverse_duration=100,\n    switch_in_curve=ft.AnimationCurve.BOUNCE_OUT,\n    switch_out_curve=ft.AnimationCurve.BOUNCE_IN,\n)\n```\n- `c` é um `AnimatedSwitcher`, um widget que permite alternar entre dois ou mais contêineres com animação.\n- `transition` define o tipo de transição, neste caso, uma escala.\n- `duration` e `reverse_duration` definem, respectivamente, a duração da animação de entrada e saída.\n- `switch_in_curve` e `switch_out_curve` definem as curvas de animação para entrada e saída.\n\n### Função de Animação\n```python\ndef animate(e):\n    c.content = c2 if c.content == c1 else c1\n    c.update()\n```\n- `animate` é uma função que alterna o conteúdo de `c` entre `c1` e `c2` e então atualiza o widget para refletir a mudança.\n\n### Adicionando Widgets à Página\n```python\npage.add(\n    c,\n    ft.ElevatedButton(\"Animate!\", on_click=animate),\n)\n```\n- Adiciona o `AnimatedSwitcher` e um botão à página.\n- O botão, quando clicado, chama a função `animate`.\n\n### Execução do App\n```python\nft.app(main)\n```\n- Inicia a aplicação, chamando a função `main`.\n\nEsse código cria uma interface simples com dois blocos de texto que alternam entre si com uma animação visual quando o usuário clica no botão \"Animate!\". É um exemplo interessante de como usar animações e eventos em aplicações Flet.",
    "examples": "O exemplo dado ilustra o uso do `ft.AnimatedSwitcher` para alternar entre dois contêineres com animação na biblioteca Flet. Abaixo, apresento diferentes formas de uso dessa estrutura, ajustando o tipo de transição, o layout e a interação, para mostrar a flexibilidade do Flet.\n\n### Exemplo 1: Uso de Slide Transition\nNeste exemplo, o `AnimatedSwitcher` utiliza a transição tipo \"slide\" para alternar entre os contêineres.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    c1 = ft.Container(\n        ft.Text(\"Left!\", style=ft.TextThemeStyle.HEADLINE_MEDIUM),\n        alignment=ft.alignment.center,\n        width=200,\n        height=200,\n        bgcolor=ft.Colors.BLUE,\n    )\n    c2 = ft.Container(\n        ft.Text(\"Right!\", size=50),\n        alignment=ft.alignment.center,\n        width=200,\n        height=200,\n        bgcolor=ft.Colors.RED,\n    )\n    c = ft.AnimatedSwitcher(\n        c1,\n        transition=ft.AnimatedSwitcherTransition.SLIDE_HORIZONTAL,\n        duration=300,\n        reverse_duration=200,\n    )\n\n    def animate(e):\n        c.content = c2 if c.content == c1 else c1\n        c.update()\n\n    page.add(\n        c,\n        ft.ElevatedButton(\"Slide!\", on_click=animate),\n    )\n\nft.app(main)\n```\n\n### Exemplo 2: Uso de Fade Transition\nAlteração para uma transição de \"fade\" entre os contêineres, para um efeito de desaparecimento e reaparecimento suave.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    c1 = ft.Container(\n        ft.Text(\"Fade In!\", style=ft.TextThemeStyle.HEADLINE_MEDIUM),\n        alignment=ft.alignment.center,\n        width=200,\n        height=200,\n        bgcolor=ft.Colors.PURPLE,\n    )\n    c2 = ft.Container(\n        ft.Text(\"Fade Out!\", size=50),\n        alignment=ft.alignment.center,\n        width=200,\n        height=200,\n        bgcolor=ft.Colors.ORANGE,\n    )\n    c = ft.AnimatedSwitcher(\n        c1,\n        transition=ft.AnimatedSwitcherTransition.FADE,\n        duration=500,\n        reverse_duration=300,\n    )\n\n    def animate(e):\n        c.content = c2 if c.content == c1 else c1\n        c.update()\n\n    page.add(\n        c,\n        ft.ElevatedButton(\"Fade!\", on_click=animate),\n    )\n\nft.app(main)\n```\n\n### Exemplo 3: Combinação de Elementos\nIntegrando imagens e texto para uma experiência mais rica.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    c1 = ft.Container(\n        [\n            ft.Text(\"Welcome!\", style=ft.TextThemeStyle.HEADLINE_MEDIUM),\n            ft.Image(src=\"https://example.com/welcome.png\", width=100, height=100)\n        ],\n        alignment=ft.alignment.center,\n        width=300,\n        height=300,\n        bgcolor=ft.Colors.LIGHT_GREEN,\n    )\n    c2 = ft.Container(\n        [\n            ft.Text(\"Goodbye!\", size=50),\n            ft.Image(src=\"https://example.com/goodbye.png\", width=100, height=100)\n        ],\n        alignment=ft.alignment.center,\n        width=300,\n        height=300,\n        bgcolor=ft.Colors.LIGHT_BLUE,\n    )\n    c = ft.AnimatedSwitcher(\n        c1,\n        transition=ft.AnimatedSwitcherTransition.SCALE,\n        duration=500,\n        reverse_duration=300,\n    )\n\n    def animate(e):\n        c.content = c2 if c.content == c1 else c1\n        c.update()\n\n    page.add(\n        c,\n        ft.ElevatedButton(\"Switch!\", on_click=animate),\n    )\n\nft.app(main)\n```\n\nEsses exemplos demonstram diferentes formas de usar o `AnimatedSwitcher` para criar interfaces dinâmicas e interativas com a biblioteca Flet em Python."
}