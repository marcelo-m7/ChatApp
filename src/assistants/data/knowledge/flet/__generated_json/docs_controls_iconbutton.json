{
    "file": "docs_controls_iconbutton.py",
    "description": "Os três blocos de código que você forneceu são exemplos de como usar a biblioteca Flet para criar uma interface gráfica de usuário (GUI) baseada em web com botões de ícones. Vamos analisar cada um deles separadamente para entender suas funções e propriedades.\n\n### Primeiro Código: Botões de Ícone Simples\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Icon buttons\"\n    page.add(\n        ft.Row(\n            [\n                ft.IconButton(\n                    icon=ft.Icons.PAUSE_CIRCLE_FILLED_ROUNDED,\n                    icon_color=\"blue400\",\n                    icon_size=20,\n                    tooltip=\"Pause record\",\n                ),\n                ft.IconButton(\n                    icon=ft.Icons.DELETE_FOREVER_ROUNDED,\n                    icon_color=\"pink600\",\n                    icon_size=40,\n                    tooltip=\"Delete record\",\n                ),\n            ]\n        ),\n    )\n\nft.app(main)\n```\n\n**Descrição:**\nEste código cria uma página web com dois botões de ícones usando a função `IconButton` do Flet. Os botões são adicionados dentro de um `Row` para alinhamento horizontal.\n\n**Propriedades dos Botões:**\n- **Ícones:** O primeiro botão usa ícone de pausa (`PAUSE_CIRCLE_FILLED_ROUNDED`) e o segundo de deletar (`DELETE_FOREVER_ROUNDED`).\n- **Cores do Ícone:** O primeiro botão é azul (`blue400`) e o segundo é rosa (`pink600`).\n- **Tamanho do Ícone:** O primeiro tem tamanho 20 e o segundo tamanho 40.\n- **Tooltip:** Mensagens informativas ao passar o mouse sobre os botões (\"Pause record\" e \"Delete record\").\n\n### Segundo Código: Botão de Ícone com Evento de Clique\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Icon button with 'click' event\"\n    def button_clicked(e):\n        b.data += 1\n        t.value = f\"Button clicked {b.data} time(s)\"\n        page.update()\n    b = ft.IconButton(\n        icon=ft.Icons.PLAY_CIRCLE_FILL_OUTLINED,\n        on_click=button_clicked,\n        data=0\n    )\n    t = ft.Text()\n    page.add(b, t)\n\nft.app(main)\n```\n\n**Descrição:**\nEste código adiciona um botão de ícone que responde a eventos de clique. Cada clique no botão incrementa um contador e atualiza um texto na página mostrando quantas vezes o botão foi clicado.\n\n**Funções:**\n- **button_clicked:** Função que é chamada quando o botão é clicado. Incrementa o valor armazenado na propriedade `data` do botão e atualiza o texto na tela.\n\n**Componentes:**\n- **IconButton:** Ícone de play que responde ao clique.\n- **Text:** Exibe o número de cliques.\n\n### Terceiro Código: Toggle de Ícone de Botão\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    def toggle_icon_button(e):\n        e.control.selected = not e.control.selected\n        e.control.update()\n    page.add(\n        ft.IconButton(\n            icon=ft.Icons.BATTERY_1_BAR,\n            selected_icon=ft.Icons.BATTERY_FULL,\n            on_click=toggle_icon_button,\n            selected=False,\n            style=ft.ButtonStyle(color={\"selected\": ft.Colors.GREEN, \"\": ft.Colors.RED}),\n        )\n    )\n\nft.app(main)\n```\n\n**Descrição:**\nEste script adiciona um botão de ícone que alterna entre dois estados (ícones) ao ser clicado, mudando também a cor do botão.\n\n**Funções:**\n- **toggle_icon_button:** Alterna o estado `selected` do botão e atualiza sua aparência.\n\n**Propriedades:**\n- **Icones:** `BATTERY_1_BAR` quando desselecionado e `BATTERY_FULL` quando selecionado.\n- **Cores:** Vermelho quando desselecionado e verde quando selecionado.\n\nCada um desses exemplos ilustra diferentes maneiras de utilizar botões de ícones em uma aplicação Flet, demonstrando configurações básicas, manipulação de eventos e alteração dinâmica de propriedades.",
    "examples": "Abaixo estão exemplos adicionais para cada um dos códigos fornecidos, explorando diferentes funcionalidades e variações de uso das `IconButton` no Flet.\n\n### Exemplo 1: Variação com diferentes ícones e cores\nEste exemplo adiciona mais botões com diferentes ícones e cores para demonstrar como compor uma interface mais diversificada.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Icon buttons with different styles\"\n    page.add(\n        ft.Row(\n            [\n                ft.IconButton(\n                    icon=ft.Icons.PAUSE_CIRCLE_FILLED_ROUNDED,\n                    icon_color=\"blue400\",\n                    icon_size=20,\n                    tooltip=\"Pause\",\n                ),\n                ft.IconButton(\n                    icon=ft.Icons.DELETE_FOREVER_ROUNDED,\n                    icon_color=\"red400\",\n                    icon_size=40,\n                    tooltip=\"Delete\",\n                ),\n                ft.IconButton(\n                    icon=ft.Icons.CHECK_CIRCLE,\n                    icon_color=\"green400\",\n                    icon_size=30,\n                    tooltip=\"Approve\",\n                ),\n                ft.IconButton(\n                    icon=ft.Icons.WARNING_AMBER_ROUNDED,\n                    icon_color=\"orange400\",\n                    icon_size=25,\n                    tooltip=\"Warning\",\n                ),\n            ]\n        ),\n    )\n\nft.app(main)\n```\n\n### Exemplo 2: Contador de cliques com feedback visual\nEste exemplo modifica o tamanho do ícone com base no número de cliques para fornecer um feedback visual além do texto.\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Icon button with dynamic icon size\"\n    \n    def button_clicked(e):\n        b.data += 1\n        b.icon_size = 20 + 5 * b.data  # Aumenta o tamanho do ícone a cada clique\n        t.value = f\"Button clicked {b.data} time(s)\"\n        page.update()\n\n    b = ft.IconButton(\n        icon=ft.Icons.PLAY_CIRCLE_FILL_OUTLINED,\n        on_click=button_clicked,\n        data=0,\n        icon_size=20\n    )\n    t = ft.Text()\n    page.add(b, t)\n\nft.app(main)\n```\n\n### Exemplo 3: Uso de IconButton para simular um botão de alternar temas\nEste exemplo utiliza IconButton para alternar entre dois temas visuais, simbolizando uma mudança de \"modo claro\" para \"modo escuro\".\n\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    def toggle_theme(e):\n        e.control.selected = not e.control.selected\n        page.background_color = ft.Colors.BLACK if e.control.selected else ft.Colors.WHITE\n        page.update()\n\n    dark_mode_button = ft.IconButton(\n        icon=ft.Icons.LIGHT_MODE,\n        selected_icon=ft.Icons.DARK_MODE,\n        on_click=toggle_theme,\n        selected=False,\n        tooltip=\"Toggle dark/light mode\",\n        style=ft.ButtonStyle(color={\"selected\": ft.Colors.YELLOW, \"\": ft.Colors.GREY}),\n    )\n    page.add(dark_mode_button)\n\nft.app(main)\n```\n\nCada um desses exemplos ilustra diferentes maneiras de utilizar o componente `IconButton` no Flet, permitindo criar interfaces interativas e visualmente atraentes."
}