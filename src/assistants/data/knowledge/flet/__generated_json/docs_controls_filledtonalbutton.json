{
    "file": "docs_controls_filledtonalbutton.py",
    "description": "O código fornecido é um exemplo de uso da biblioteca Flet em Python para criar uma interface gráfica simples com botões. A biblioteca Flet é usada para criar aplicativos web com uma interface gráfica em Python, que podem ser executados localmente ou em um servidor web. O código define uma função `main` que é passada para `flet.app`, que inicializa e executa o aplicativo. Vamos explorar cada parte do código:\n\n```python\nimport flet as ft\n```\nEsta linha importa a biblioteca Flet, que é referenciada como `ft` no restante do código.\n\n```python\ndef main(page: ft.Page):\n```\nDefine a função `main` com um parâmetro `page`, que é do tipo `ft.Page`. Este objeto `page` representa a página do aplicativo web e é onde os componentes da interface do usuário (UI) serão adicionados.\n\n```python\n    page.title = \"Basic filled tonal buttons\"\n```\nAqui, o título da página é definido como \"Basic filled tonal buttons\". Este título pode aparecer na aba do navegador quando o aplicativo é executado.\n\n```python\n    page.add(\n        ft.FilledTonalButton(text=\"Filled tonal button\"),\n        ft.FilledTonalButton(\"Disabled button\", disabled=True),\n        ft.FilledTonalButton(\"Button with icon\", icon=\"add\"),\n    )\n```\nEsta parte do código adiciona três botões à página usando o método `add` do objeto `page`. Os botões são criados usando a classe `ft.FilledTonalButton`, que cria botões com um estilo preenchido e tonal. Cada botão é configurado de maneira diferente:\n\n1. **Botão Preenchido Tonal Padrão**:\n   - `ft.FilledTonalButton(text=\"Filled tonal button\")`: Cria um botão com o texto \"Filled tonal button\".\n\n2. **Botão Desabilitado**:\n   - `ft.FilledTonalButton(\"Disabled button\", disabled=True)`: Cria um botão com o texto \"Disabled button\" e a propriedade `disabled=True`, o que faz com que o botão seja exibido como desabilitado na interface, não podendo ser clicado pelo usuário.\n\n3. **Botão com Ícone**:\n   - `ft.FilledTonalButton(\"Button with icon\", icon=\"add\")`: Cria um botão com o texto \"Button with icon\" e inclui um ícone representado pela string \"add\". Este ícone é normalmente mostrado junto com o texto no botão.\n\n```python\nft.app(main)\n```\nFinalmente, a função `main` é passada para `ft.app`, que é responsável por iniciar e rodar o aplicativo. Quando o aplicativo é executado, a função `main` é chamada automaticamente com o objeto `page` fornecido pelo Flet, e os componentes UI definidos são renderizados na página web.\n\nEste código ilustra uma maneira simples de criar uma interface de usuário com botões usando a biblioteca Flet em Python, demonstrando diferentes configurações de botões como desabilitado e com ícones.",
    "examples": "O código que você forneceu exemplifica o uso de botões tonais preenchidos (FilledTonalButton) em uma aplicação Flet. Para expandir isso com exemplos adicionais, vamos explorar diferentes configurações de botões, como alterar cores, adicionar eventos e organizar visualmente os botões na interface. Aqui estão algumas formas de uso:\n\n### Exemplo 1: Alterando Cores do Botão\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Botões com Cores Customizadas\"\n    page.add(\n        ft.FilledTonalButton(text=\"Botão Vermelho\", color=ft.colors.RED),\n        ft.FilledTonalButton(text=\"Botão Azul\", color=ft.colors.BLUE),\n        ft.FilledTonalButton(text=\"Botão Verde\", color=ft.colors.GREEN),\n    )\n\nft.app(main)\n```\n\n### Exemplo 2: Botões com Eventos\n```python\nimport flet as ft\n\ndef on_button_click(e):\n    e.control.text = \"Clicado!\"\n\ndef main(page: ft.Page):\n    page.title = \"Botões com Eventos\"\n    button = ft.FilledTonalButton(text=\"Clique-me\", on_click=on_button_click)\n    page.add(button)\n\nft.app(main)\n```\n\n### Exemplo 3: Organizando Botões com Row e Column\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Organização de Botões\"\n    row = ft.Row([\n        ft.FilledTonalButton(text=\"Botão 1\"),\n        ft.FilledTonalButton(text=\"Botão 2\"),\n        ft.FilledTonalButton(text=\"Botão 3\"),\n    ])\n    column = ft.Column([\n        ft.FilledTonalButton(text=\"Botão A\"),\n        ft.FilledTonalButton(text=\"Botão B\"),\n        ft.FilledTonalButton(text=\"Botão C\"),\n    ])\n    page.add(row, column)\n\nft.app(main)\n```\n\n### Exemplo 4: Botões com Ícones e Tooltips\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Botões com Ícones e Tooltips\"\n    page.add(\n        ft.FilledTonalButton(text=\"Adicionar\", icon=\"add\", tooltip=\"Adicionar item\"),\n        ft.FilledTonalButton(text=\"Editar\", icon=\"edit\", tooltip=\"Editar item\"),\n        ft.FilledTonalButton(text=\"Deletar\", icon=\"delete\", tooltip=\"Deletar item\", disabled=True),\n    )\n\nft.app(main)\n```\n\n### Exemplo 5: Botões com Diferentes Tamanhos\n```python\nimport flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Botões de Diferentes Tamanhos\"\n    page.add(\n        ft.FilledTonalButton(text=\"Pequeno\", size=ft.ButtonSize.SMALL),\n        ft.FilledTonalButton(text=\"Médio\", size=ft.ButtonSize.MEDIUM),\n        ft.FilledTonalButton(text=\"Grande\", size=ft.ButtonSize.LARGE),\n    )\n\nft.app(main)\n```\n\nCada um desses exemplos demonstra diferentes funcionalidades e configurações que podem ser utilizadas com `FilledTonalButton` no Flet, permitindo criar interfaces interativas e visualmente atrativas."
}