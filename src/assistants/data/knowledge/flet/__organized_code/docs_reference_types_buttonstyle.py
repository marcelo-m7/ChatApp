ButtonStyle(    color=ft.Colors.WHITE)

ButtonStyle(    color={        ft.ControlState.HOVERED: ft.Colors.WHITE,        ft.ControlState.FOCUSED: ft.Colors.BLUE,        ft.ControlState.DEFAULT: ft.Colors.BLACK,    })

import flet as ftdef main(page: ft.Page):    page.padding = 30    page.spacing = 30    page.add(        ft.FilledButton(            "Stadium",            style=ft.ButtonStyle(                shape=ft.StadiumBorder(),            ),        ),        ft.FilledButton(            "Rounded rectangle",            style=ft.ButtonStyle(                shape=ft.RoundedRectangleBorder(radius=10),            ),        ),        ft.FilledButton(            "Continuous rectangle",            style=ft.ButtonStyle(                shape=ft.ContinuousRectangleBorder(radius=30),            ),        ),        ft.FilledButton(            "Beveled rectangle",            style=ft.ButtonStyle(                shape=ft.BeveledRectangleBorder(radius=10),            ),        ),        ft.FilledButton(            "Circle",            style=ft.ButtonStyle(shape=ft.CircleBorder(), padding=30),        ),    )ft.app(main)

import flet as ftdef main(page: ft.Page):    page.add(        ft.ElevatedButton(            "Styled button 1",            style=ft.ButtonStyle(                color={                    ft.ControlState.HOVERED: ft.Colors.WHITE,                    ft.ControlState.FOCUSED: ft.Colors.BLUE,                    ft.ControlState.DEFAULT: ft.Colors.BLACK,                },                bgcolor={ft.ControlState.FOCUSED: ft.Colors.PINK_200, "": ft.Colors.YELLOW},                padding={ft.ControlState.HOVERED: 20},                overlay_color=ft.Colors.TRANSPARENT,                elevation={"pressed": 0, "": 1},                animation_duration=500,                side={                    ft.ControlState.DEFAULT: ft.BorderSide(1, ft.Colors.BLUE),                    ft.ControlState.HOVERED: ft.BorderSide(2, ft.Colors.BLUE),                },                shape={                    ft.ControlState.HOVERED: ft.RoundedRectangleBorder(radius=20),                    ft.ControlState.DEFAULT: ft.RoundedRectangleBorder(radius=2),                },            ),        )    )ft.app(main)

