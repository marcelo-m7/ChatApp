{
    "url": "https://flet.dev/docs/getting-started/custom-controls",
    "code_snippets": [
        "class MyButton(ft.ElevatedButton):    def __init__(self, text):        super().__init__()        self.bgcolor = ft.Colors.ORANGE_300        self.color = ft.Colors.GREEN_800        self.text = text",
        "import flet as ftdef main(page: ft.Page):    page.add(MyButton(text=\"OK\"), MyButton(text=\"Cancel\"))ft.app(main)",
        "import flet as ftclass MyButton(ft.ElevatedButton):    def __init__(self, text, on_click):        super().__init__()        self.bgcolor = ft.Colors.ORANGE_300        self.color = ft.Colors.GREEN_800        self.text = text        self.on_click = on_clickdef main(page: ft.Page):    def ok_clicked(e):        print(\"OK clicked\")        def cancel_clicked(e):        print(\"Cancel clicked\")    page.add(        MyButton(text=\"OK\", on_click=ok_clicked),        MyButton(text=\"Cancel\", on_click=cancel_clicked),    )ft.app(main)",
        "import flet as ftclass Task(ft.Row):    def __init__(self, text):        super().__init__()        self.text_view = ft.Text(text)        self.text_edit = ft.TextField(text, visible=False)        self.edit_button = ft.IconButton(icon=ft.Icons.EDIT, on_click=self.edit)        self.save_button = ft.IconButton(            visible=False, icon=ft.Icons.SAVE, on_click=self.save        )        self.controls = [            ft.Checkbox(),            self.text_view,            self.text_edit,            self.edit_button,            self.save_button,        ]    def edit(self, e):        self.edit_button.visible = False        self.save_button.visible = True        self.text_view.visible = False        self.text_edit.visible = True        self.update()    def save(self, e):        self.edit_button.visible = True        self.save_button.visible = False        self.text_view.visible = True        self.text_edit.visible = False        self.text_view.value = self.text_edit.value        self.update()def main(page: ft.Page):    page.add(        Task(text=\"Do laundry\"),        Task(text=\"Cook dinner\"),    )ft.app(main)",
        "class Task(ft.Row):    def __init__(self, text):        super().__init__()        def is_isolated(self):        return True"
    ]
}